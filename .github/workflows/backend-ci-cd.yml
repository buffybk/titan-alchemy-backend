name: Backend CI/CD


on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'requirements.txt'
      - 'run.py'
      - 'config.py'
      - 'tests/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'requirements.txt'
      - 'run.py'
      - 'config.py'
      - 'tests/**'
      - 'Dockerfile'
      - 'docker-compose.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: titan_alchemy
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Build and run tests
      run: |
        docker build --target test --build-arg CACHEBUST=${{ github.run_number }} --build-arg TIMESTAMP=${{ github.run_id }} -t backend-test .
        docker run --name backend-test \
          -e DATABASE_URL=mysql://root:root@mysql:3306/titan_alchemy \
          --network ${{ job.services.mysql.network }} \
          backend-test
    
    - name: Copy coverage from container
      run: |
        docker cp backend-test:/app/coverage.xml .
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      run: |
        docker build --target production -t ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:${{ github.sha }} .
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:${{ github.sha }}
        docker tag ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:latest
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'titan-alchemy-backend'
        images: ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:${{ github.sha }} 