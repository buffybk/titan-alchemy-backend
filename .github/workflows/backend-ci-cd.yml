name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/backend-ci-cd.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/backend-ci-cd.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Debug - List repository contents
      run: |
        echo "=== REPOSITORY CONTENTS ==="
        find . -type f -name "*.py" | head -20
        echo "=== CONFTEST.PY CONTENT ==="
        cat tests/conftest.py
        echo "=== TEST_ROUTES.PY CONTENT ==="
        cat tests/test_routes.py
        echo "=== APP/__INIT__.PY CONTENT ==="
        cat app/__init__.py
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Force Docker system prune
      run: |
        docker system prune -af
        docker builder prune -af
    
    - name: Build and test with Docker
      run: |
        echo "=== BUILDING DOCKER IMAGE ==="
        docker build --no-cache --build-arg CACHEBUST=$(date +%s) -t titan-alchemy-backend .
        
        echo "=== RUNNING TESTS IN CONTAINER ==="
        docker run --rm titan-alchemy-backend bash -c "
          echo '=== CONTAINER FILE STRUCTURE ==='
          find . -name '*.py' | head -20
          echo '=== CONFTEST.PY IN CONTAINER ==='
          cat tests/conftest.py
          echo '=== TEST_ROUTES.PY IN CONTAINER ==='
          cat tests/test_routes.py
          echo '=== APP/__INIT__.PY IN CONTAINER ==='
          cat app/__init__.py
          echo '=== RUNNING TESTS ==='
          python -m pytest tests/ -v
        "

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      run: |
        docker build --target production -t ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:${{ github.sha }} .
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:${{ github.sha }}
        docker tag ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:latest
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/titan-alchemy-backend:latest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'titanalchemy1-flask-app'
        slot-name: 'production' 